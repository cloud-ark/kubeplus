apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: '[{"apiVersion":"workflows.kubeplus/v1alpha1","kind":"ResourceComposition","metadata":{"name":"hello-world-service-composition","namespace":"default"},"spec":{"newResource":{"resource": {"kind": "HelloWorldService", "group": "platformapi.kubeplus", "version": "v1alpha1", "plural": "helloworldservices"}}}}]'
    capabilities: Basic Install
  name: kubeplus.v1.0.0
  namespace: default
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - kind: ResourceComposition
        group: workflows.kubeplus
        name: resourcecompositions.workflows.kubeplus
        version: v1alpha1
        displayName: ResourceComposition
        description: Compose new CRDs using ResourceComposition
      - kind: ResourcePolicy
        group: workflows.kubeplus
        name: resourcepolicies.workflows.kubeplus
        version: v1alpha1
        displayName: ResourcePolicy
        description: Define Policies for new CRDs using ResourcePolicy
      - kind: ResourceMonitor
        group: workflows.kubeplus
        name: resourcemonitors.workflows.kubeplus
        version: v1alpha1
        displayName: ResourceMonitor
        description: Monitor new CRDs using ResourceMonitor
      - kind: ResourceEvent
        group: workflows.kubeplus
        name: resourceevents.workflows.kubeplus
        version: v1alpha1
        displayName: ResourceEvent
        description: ResourceEvent represents a life-cycle event for new CRD
  description: SaaS Multi-tenancy Manager
  displayName: KubePlus
  icon:
  - base64data: ""
    mediatype: "svg"
  install:
    spec:
      deployments:
        - name: kubeplus-deployment
          spec:
            serviceAccount: kubeplus
            initContainers:
            - name: webhook-cert-setup
              # This is a minimal kubectl image based on Alpine Linux that signs certificates using the k8s extension api server
              #image: gcr.io/cloudark-kubeplus/webhook-tls-getter:0.0.6
              image: registry.connect.redhat.com/cloudark/kubeplus-webhook-cert-setup:0.0.6
              imagePullPolicy: Always
              command: ["./webhook-create-signed-cert-new.sh"]
              args:
                - "--service"
                - "crd-hook-service"
                - "--namespace"
                - "default"
                - "--secret"
                - "webhook-tls-certificates"
            containers:
            - name: crd-hook
              #image: gcr.io/cloudark-kubeplus/pac-mutating-admission-webhook:0.5.8
              image: registry.connect.redhat.com/cloudark/kubeplus-mutating-webhook:0.5.8
              imagePullPolicy: Always
              args:
                - -tlsCertFile=/etc/webhook/certs/cert.pem
                - -tlsKeyFile=/etc/webhook/certs/key.pem
                - -alsologtostderr
                #- -v=4
                - 2>&1
              volumeMounts:
              - name: webhook-certs
                mountPath: /etc/webhook/certs
                readOnly: true
            - name: mutating-webhook-helper
              #image: lmecld/mutating-webhook-helper:latest
              image: registry.connect.redhat.com/cloudark/kubeplus-mutating-webhook-helper:0.5.8
              imagePullPolicy: Always
            - name: platform-operator
              #image: gcr.io/cloudark-kubeplus/platform-operator:0.0.9
              image: registry.connect.redhat.com/cloudark/kubeplus-platform-operator:0.0.9
              imagePullPolicy: Always
              command: [ "/platform-operator"]
            - name: helmer
              #image: gcr.io/cloudark-kubeplus/helm-pod:0.0.9
              image: registry.connect.redhat.com/cloudark/kubeplus-helmer1:0.0.9
              imagePullPolicy: Always
              command: ["/root/helm-pod"]
              volumeMounts:
              - mountPath: /chart
                name: chart-volume
            volumes:
              - name: chart-volume
                emptyDir: {}
              - name: webhook-certs
                secret:
                  secretName: webhook-tls-certificates
      permissions:
        - serviceAccountName: kubeplus
          rules:
            - apiGroups:
                - '*'
              resources:
                - '*'
              verbs:
                - '*'
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - SaaS
  - Helm
  - containerized applications
  links:
  - name: Kubeplus
    url: https://github.com/cloud-ark/kubeplus
  maintainers:
  - email: devdatta@cloudark.io
    name: Devdatta Kulkarni
  maturity: alpha
  provider:
    name: CloudARK, Inc.
    url: https://cloudark.io/
  version: 1.0.0
