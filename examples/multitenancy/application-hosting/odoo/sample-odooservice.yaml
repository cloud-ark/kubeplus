apiVersion: platformapi.kubeplus/v1alpha1
kind: OdooService
metadata:
  name: sample-odooservice
spec:
  ## @section Global parameters
  ## Global Docker image parameters
  ## Please, note that this will override the image parameters, including dependencies, configured to use the global value
  ## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
  ##
  
  ## @param global.imageRegistry Global Docker image registry
  ## @param global.imagePullSecrets Global Docker registry secret names as an array
  ## @param global.storageClass Global StorageClass for Persistent Volume(s)
  ##
  global:
    imageRegistry: ""
    ## E.g.
    ## imagePullSecrets:
    ##   - myRegistryKeySecretName
    ##
    imagePullSecrets: []
    storageClass: ""
  
  ## @section Common parameters
  ##
  
  ## @param kubeVersion Override Kubernetes version
  ##
  kubeVersion: ""
  ## @param nameOverride String to partially override common.names.fullname
  ##
  nameOverride: ""
  ## @param fullnameOverride String to fully override common.names.fullname
  ##
  fullnameOverride: ""
  ## @param commonLabels Labels to add to all deployed objects
  ##
  commonLabels: {}
  ## @param commonAnnotations Annotations to add to all deployed objects
  ##
  commonAnnotations: {}
  ## @param clusterDomain Default Kubernetes cluster domain
  ##
  clusterDomain: cluster.local
  ## @param extraDeploy Array of extra objects to deploy with the release
  ##
  extraDeploy: []
  ## Enable diagnostic mode in the statefulset
  ##
  diagnosticMode:
    ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
    ##
    enabled: false
    ## @param diagnosticMode.command Command to override all containers in the the statefulset
    ##
    command:
      - sleep
    ## @param diagnosticMode.args Args to override all containers in the the statefulset
    ##
    args:
      - infinity
  
  ## Bitnami Odoo image
  ## ref: https://hub.docker.com/r/bitnami/odoo/tags/
  ## @param image.registry Odoo image registry
  ## @param image.repository Odoo image repository
  ## @param image.tag Odoo image tag (immutable tags are recommended)
  ## @param image.digest Odoo image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param image.pullPolicy Odoo image pull policy
  ## @param image.pullSecrets Odoo image pull secrets
  ## @param image.debug Enable image debug mode
  ##
  image:
    registry: docker.io
    repository: bitnami/odoo
    tag: 16.0.20221115-debian-11-r13
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Enable debug mode
    ##
    debug: false
  
  ## @section Odoo Configuration parameters
  ## Odoo settings based on environment variables
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/odoo#environment-variables
  ##
  
  ## @param odooEmail Odoo user email
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/odoo#configuration
  ##
  odooEmail: user@example.com
  ## @param odooPassword Odoo user password
  ## Defaults to a random 10-character alphanumeric string if not set
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/odoo#configuration
  ##
  odooPassword: "user123"
  ## @param odooSkipInstall Skip Odoo installation wizard
  ##
  odooSkipInstall: false
  ## @param loadDemoData Whether to load demo data for all modules during initialization
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/odoo#configuration
  ##
  loadDemoData: false
  ## @param customPostInitScripts Custom post-init.d user scripts
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/odoo
  ## NOTE: supported formats are `.sh`, `.sql` or `.php`
  ## NOTE: scripts are exclusively executed during the 1st boot of the container
  ## e.g:
  ## customPostInitScripts:
  ##   enable-logs.sh: |
  ##     #!/bin/bash
  ##     sed -i s/;logfile/logfile/ /opt/bitnami/odoo/conf/odoo.conf
  ##     ...
  ##
  customPostInitScripts: {}
  ## SMTP mail delivery configuration
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/odoo/#smtp-configuration
  ## @param smtpHost SMTP server host
  ## @param smtpPort SMTP server port
  ## @param smtpUser SMTP username
  ## @param smtpPassword SMTP user password
  ## @param smtpProtocol SMTP protocol
  ##
  smtpHost: ""
  smtpPort: ""
  smtpUser: ""
  smtpPassword: ""
  smtpProtocol: ""
  ## @param existingSecret Name of existing secret containing Odoo credentials
  ## NOTE: Must contain key `odoo-password`
  ## NOTE: When it's set, the `odooPassword` parameter is ignored
  ##
  existingSecret: ""
  ## @param smtpExistingSecret The name of an existing secret with SMTP credentials
  ## NOTE: Must contain key `smtp-password`
  ## NOTE: When it's set, the `smtpPassword` parameter is ignored
  ##
  smtpExistingSecret: ""
  ## @param allowEmptyPassword Allow the container to be started with blank passwords
  ##
  allowEmptyPassword: false
  ## @param command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param extraEnvVars Array with extra environment variables to add to the Odoo container
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param extraEnvVarsCM Name of existing ConfigMap containing extra env vars
  ##
  extraEnvVarsCM: ""
  ## @param extraEnvVarsSecret Name of existing Secret containing extra env vars
  ##
  extraEnvVarsSecret: ""
  
  ## @section Odoo deployment parameters
  ##
  
  ## @param replicaCount Number of Odoo replicas to deploy
  ## NOTE: ReadWriteMany PVC(s) are required if replicaCount > 1
  ##
  replicaCount: 1
  ## Odoo container ports
  ## @param containerPorts.http Odoo HTTP container port
  ##
  containerPorts:
    http: 8069
  ## Odoo containers' resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## @param resources.limits The resources limits for the Odoo container
  ## @param resources.requests [object] The requested resources for the Odoo container
  ##
  resources:
    limits: {}
    requests:
      memory: 512Mi
      cpu: 300m
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param podSecurityContext.enabled Enabled Odoo pods' Security Context
  ## @param podSecurityContext.fsGroup Set Odoo pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  ## Configure Container Security Context (only main container)
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param containerSecurityContext.enabled Enabled Odoo containers' Security Context
  ## @param containerSecurityContext.runAsUser Set Odoo container's Security Context runAsUser
  ##
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
  ## Configure extra options for Odoo containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param livenessProbe.enabled Enable livenessProbe
  ## @param livenessProbe.path Path for to check for livenessProbe
  ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    path: /
    initialDelaySeconds: 600
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param readinessProbe.enabled Enable readinessProbe
  ## @param readinessProbe.path Path to check for readinessProbe
  ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    path: /
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param startupProbe.enabled Enable startupProbe
  ## @param startupProbe.path Path to check for startupProbe
  ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param startupProbe.periodSeconds Period seconds for startupProbe
  ## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    path: /
    initialDelaySeconds: 300
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param customReadinessProbe Custom readinessProbe that overrides the default one
  #
  customReadinessProbe: {}
  ## @param customStartupProbe Custom startupProbe that overrides the default one
  #
  customStartupProbe: {}
  ## @param lifecycleHooks LifecycleHooks to set additional configuration at startup
  ##
  lifecycleHooks: {}
  ## @param hostAliases Odoo pod host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param podLabels Extra labels for Odoo pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param podAnnotations Annotations for Odoo pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node affinity preset
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set
    ##
    key: ""
    ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param affinity Affinity for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
  ##
  affinity: {}
  ## @param nodeSelector Node labels for pod assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param tolerations Tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param priorityClassName Odoo pods' Priority Class Name
  ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  ##
  priorityClassName: ""
  ## @param schedulerName Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param terminationGracePeriodSeconds Seconds Odoo pod needs to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param updateStrategy.type Odoo deployment strategy type
  ## @param updateStrategy.rollingUpdate Odoo deployment rolling update configuration parameters
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  ## NOTE: Set it to `Recreate` if you use a PV that cannot be mounted on multiple pods
  ## e.g:
  ## updateStrategy:
  ##  type: RollingUpdate
  ##  rollingUpdate:
  ##    maxSurge: 25%
  ##    maxUnavailable: 25%
  ##
  updateStrategy:
    type: RollingUpdate
    rollingUpdate: {}
  ## @param extraVolumes Optionally specify extra list of additional volumes for Odoo pods
  ##
  extraVolumes: []
  ## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for Odoo container(s)
  ##
  extraVolumeMounts: []
  ## @param extraContainerPorts Optionally specify extra list of additional ports for Odoo container(s)
  ## e.g:
  ## extraContainerPorts:
  ##   - name: longpolling
  ##     containerPort: 8072
  ##
  extraContainerPorts: []
  ## @param sidecars Add additional sidecar containers to the Odoo pod
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param initContainers Add additional init containers to the Odoo pods
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'copy addons from git and push to /bitnami/odoo/addons. Should work with extraVolumeMounts and extraVolumes']
  ##
  initContainers: []
  
  ## @section Traffic Exposure Parameters
  ##
  
  ## Odoo service parameters
  ##
  service:
    ## @param service.type Odoo service type
    ##
    type: NodePort
    ## @param service.ports.http Odoo service HTTP port
    ##
    ports:
      http: 80
    ## @param service.nodePorts.http NodePort for the Odoo HTTP endpoint
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: "30001"
    ## @param service.sessionAffinity Control where client requests go, to the same pod or round-robin
    ## Values: ClientIP or None
    ## ref: https://kubernetes.io/docs/user-guide/services/
    ##
    sessionAffinity: None
    ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}
    ## @param service.clusterIP Odoo service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param service.loadBalancerIP Odoo service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param service.loadBalancerSourceRanges Odoo service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param service.externalTrafficPolicy Odoo service external traffic policy
    ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param service.annotations Additional custom annotations for Odoo service
    ##
    annotations: {}
    ## @param service.extraPorts Extra port to expose on Odoo service
    ##
    extraPorts: []
  
  ## Configure the ingress resource that allows you to access the Odoo installation
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
  ##
  ingress:
    ## @param ingress.enabled Enable ingress record generation for Odoo
    ##
    enabled: false
    ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
    ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
    ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
    ##
    ingressClassName: ""
    ## @param ingress.pathType Ingress path type
    ##
    pathType: ImplementationSpecific
    ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
    ##
    apiVersion: ""
    ## @param ingress.hostname Default host for the ingress record
    ##
    hostname: odoo.local
    ## @param ingress.path Default path for the ingress record
    ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
    ##
    path: /
    ## @param ingress.annotations [object] Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
    ## Use this parameter to set the required annotations for cert-manager, see
    ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
    ## e.g:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   cert-manager.io/cluster-issuer: cluster-issuer-name
    ##
    annotations: {}
    ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
    ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname | trunc 63 | trimSuffix "-" }}`
    ## You can:
    ##   - Use the `ingress.secrets` parameter to create this TLS secret
    ##   - Rely on cert-manager to create it by setting the corresponding annotations
    ##   - Rely on Helm to create self-signed certificates by setting `ingress.tls=true` and `ingress.certManager=false`
    ##
    tls: false
    ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
    ##
    selfSigned: false
    ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
    ## e.g:
    ## extraHosts:
    ##   - name: odoo.local
    ##     path: /
    ##
    extraHosts: []
    ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
    ## e.g:
    ## extraPaths:
    ## - path: /*
    ##   backend:
    ##     serviceName: ssl-redirect
    ##     servicePort: use-annotation
    ##
    extraPaths: []
    ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    ## e.g:
    ## extraTls:
    ## - hosts:
    ##     - odoo.local
    ##   secretName: odoo.local-tls
    ##
    extraTls: []
    ## @param ingress.secrets Custom TLS certificates as secrets
    ## NOTE: 'key' and 'certificate' are expected in PEM format
    ## NOTE: 'name' should line up with a 'secretName' set further up
    ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
    ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
    ## It is also possible to create and manage the certificates outside of this helm chart
    ## Please see README.md for more information
    ## e.g:
    ## secrets:
    ##   - name: odoo.local-tls
    ##     key: |-
    ##       -----BEGIN RSA PRIVATE KEY-----
    ##       ...
    ##       -----END RSA PRIVATE KEY-----
    ##     certificate: |-
    ##       -----BEGIN CERTIFICATE-----
    ##       ...
    ##       -----END CERTIFICATE-----
    ##
    secrets: []
    ## @param ingress.extraRules Additional rules to be covered with this ingress record
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    ## e.g:
    ## extraRules:
    ## - host: example.local
    ##     http:
    ##       path: /
    ##       backend:
    ##         service:
    ##           name: example-svc
    ##           port:
    ##             name: http
    ##
    extraRules: []
  
  ## @section Persistence Parameters
  ##
  
  ## Persistence Parameters
  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    ## @param persistence.enabled Enable persistence using Persistent Volume Claims
    ##
    enabled: true
    ## @param persistence.resourcePolicy Setting it to "keep" to avoid removing PVCs during a helm delete operation. Leaving it empty will delete PVCs after the chart deleted
    ##
    resourcePolicy: ""
    ## @param persistence.storageClass Persistent Volume storage class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
    ##
    storageClass: ""
    ## @param persistence.accessModes [array] Persistent Volume access modes
    ##
    accessModes:
      - ReadWriteOnce
    ## @param persistence.accessMode Persistent Volume access mode (DEPRECATED: use `persistence.accessModes` instead)
    ##
    accessMode: ReadWriteOnce
    ## @param persistence.size Persistent Volume size
    ##
    size: 10Gi
    ## @param persistence.dataSource Custom PVC data source
    ##
    dataSource: {}
    ## @param persistence.annotations Annotations for the PVC
    ##
    annotations: {}
    ## @param persistence.selector Selector to match an existing Persistent Volume (this value is evaluated as a template)
    ## selector:
    ##   matchLabels:
    ##     app: my-app
    ##
    selector: {}
    ## @param persistence.existingClaim The name of an existing PVC to use for persistence
    ##
    existingClaim: ""
  
  ## 'volumePermissions' init container parameters
  ## Changes the owner and group of the persistent volume mount point to runAsUser:fsGroup values
  ##   based on the podSecurityContext/containerSecurityContext parameters
  ##
  volumePermissions:
    ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`
    ##
    enabled: false
    ## Init container's resource requests and limits
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## @param volumePermissions.resources.limits The resources limits for the init container
    ## @param volumePermissions.resources.requests The requested resources for the init container
    ##
    resources:
      limits: {}
      requests: {}
    ## Init container Container Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    ## @param volumePermissions.containerSecurityContext.enabled Enable init container's Security Context
    ## @param volumePermissions.containerSecurityContext.runAsUser Set init container's Security Context runAsUser
    ##
    containerSecurityContext:
      enabled: true
      runAsUser: 0
  
  ## @section RBAC Parameters
  
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ## @param serviceAccount.name The name of the ServiceAccount to create (name generated using common.names.fullname template otherwise)
  ## @param serviceAccount.automountServiceAccountToken Auto-mount the service account token in the pod
  ## @param serviceAccount.annotations Additional custom annotations for the ServiceAccount
  ##
  serviceAccount:
    create: true
    name: ""
    automountServiceAccountToken: false
    annotations: {}
  
  ## @section Other Parameters
  ##
  
  ## Odoo Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ## @param pdb.create Enable a Pod Disruption Budget creation
  ## @param pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable
  ##
  pdb:
    create: false
    minAvailable: 1
    maxUnavailable: ""
  
  ## Odoo Autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param autoscaling.enabled Enable Horizontal POD autoscaling for Odoo
  ## @param autoscaling.minReplicas Minimum number of Odoo replicas
  ## @param autoscaling.maxReplicas Maximum number of Odoo replicas
  ## @param autoscaling.targetCPU Target CPU utilization percentage
  ## @param autoscaling.targetMemory Target Memory utilization percentage
  ##
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 11
    targetCPU: 50
    targetMemory: 50
  
  ## @section Database Parameters
  
  ## PostgreSQL chart configuration
  ## ref: https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
  ## @param postgresql.enabled Switch to enable or disable the PostgreSQL helm chart
  ## @param postgresql.auth.username Name for a custom user to create
  ## @param postgresql.auth.password Password for the custom user to create
  ## @param postgresql.auth.database Name for a custom database to create
  ## @param postgresql.auth.existingSecret Name of existing secret to use for PostgreSQL credentials
  ## @param postgresql.architecture PostgreSQL architecture (`standalone` or `replication`)
  ##
  postgresql:
    enabled: true
    auth:
      username: bn_odoo
      password: ""
      database: bitnami_odoo
      existingSecret: ""
    architecture: standalone
  ## External PostgreSQL configuration
  ## All of these values are only used when postgresql.enabled is set to false
  ## @param externalDatabase.host Database host
  ## @param externalDatabase.port Database port number
  ## @param externalDatabase.user Non-root username for Keycloak
  ## @param externalDatabase.password Password for the non-root username for Keycloak
  ## @param externalDatabase.database Keycloak database name
  ## @param externalDatabase.create Enable PostgreSQL user and database creation (when using an external db)
  ## @param externalDatabase.postgresqlPostgresUser External Database admin username
  ## @param externalDatabase.postgresqlPostgresPassword External Database admin password
  ## @param externalDatabase.existingSecret Name of an existing secret resource containing the database credentials
  ## @param externalDatabase.existingSecretPasswordKey Name of an existing secret key containing the non-root credentials
  ## @param externalDatabase.existingSecretPostgresPasswordKey Name of an existing secret key containing the admin credentials
  ##
  externalDatabase:
    host: ""
    port: 5432
    user: bn_odoo
    password: ""
    database: bitnami_odoo
    create: true
    postgresqlPostgresUser: "postgres"
    postgresqlPostgresPassword: ""
    existingSecret: ""
    existingSecretPasswordKey: ""
    existingSecretPostgresPasswordKey: ""
  
  ## @section NetworkPolicy parameters
  ##
  
  ## Add networkpolicies
  ##
  networkPolicy:
    ## @param networkPolicy.enabled Enable network policies
    ## If ingress.enabled or metrics.enabled are true, configure networkPolicy.ingress and networkPolicy.metrics selectors respectively to allow communication
    ##
    enabled: false
    ## @param networkPolicy.ingress.enabled Enable network policy for Ingress Proxies
    ## @param networkPolicy.ingress.namespaceSelector Ingress Proxy namespace selector labels. These labels will be used to identify the Ingress Proxy's namespace.
    ## @param networkPolicy.ingress.podSelector Ingress Proxy pods selector labels. These labels will be used to identify the Ingress Proxy pods.
    ##
    ingress:
      enabled: false
      ## e.g:
      ## podSelector:
      ##   label: ingress
      ##
      podSelector: {}
      ## e.g:
      ## namespaceSelector:
      ##   label: ingress
      ##
      namespaceSelector: {}
    ## @param networkPolicy.ingressRules.backendOnlyAccessibleByFrontend Enable ingress rule that makes the backend (mariadb) only accessible by Odoo's pods.
    ## @param networkPolicy.ingressRules.customBackendSelector Backend selector labels. These labels will be used to identify the backend pods.
    ## @param networkPolicy.ingressRules.accessOnlyFrom.enabled Enable ingress rule that makes Odoo only accessible from a particular origin
    ## @param networkPolicy.ingressRules.accessOnlyFrom.namespaceSelector Namespace selector label that is allowed to access Odoo. This label will be used to identified the allowed namespace(s).
    ## @param networkPolicy.ingressRules.accessOnlyFrom.podSelector Pods selector label that is allowed to access Odoo. This label will be used to identified the allowed pod(s).
    ## @param networkPolicy.ingressRules.customRules Custom network policy ingress rule
    ##
    ingressRules:
      ## mariadb backend only can be accessed from Odoo
      ##
      backendOnlyAccessibleByFrontend: false
      customBackendSelector: {}
      ## Allow only from the indicated:
      ##
      accessOnlyFrom:
        enabled: false
        ## e.g:
        ## namespaceSelector:
        ##   label: ingress
        ##
        namespaceSelector: {}
        ## e.g:
        ## podSelector:
        ##   label: access
        ##
        podSelector: {}
      ## custom ingress rules
      ## e.g:
      ## customRules:
      ##   - from:
      ##       - namespaceSelector:
      ##           matchLabels:
      ##             label: example
      ##
      customRules: {}
    ## @param networkPolicy.egressRules.denyConnectionsToExternal Enable egress rule that denies outgoing traffic outside the cluster, except for DNS (port 53).
    ## @param networkPolicy.egressRules.customRules Custom network policy rule
    ##
    egressRules:
      ## Deny connections to external. This is not compatible with an external database.
      ##
      denyConnectionsToExternal: false
      ## Additional custom egress rules
      ## e.g:
      ## customRules:
      ##   - to:
      ##       - namespaceSelector:
      ##           matchLabels:
      ##             label: example
      ##
      customRules: {}
  

