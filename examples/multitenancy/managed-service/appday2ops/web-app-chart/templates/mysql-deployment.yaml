apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  labels:
    app: mysql
    tier: database
spec:
  replicas: 1
  serviceName: "mysql"
  selector:
    matchLabels:
      app: mysql
      tier: database
  template:
    metadata:
      labels:
        app: mysql
        tier: database
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - image: mysql:5.6
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-root-credentials
              key: password
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: db-conf
              key: name
        resources:
          limits:
            cpu: "100m"
          requests:
            cpu: "100m"
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        - name: mysql-initdb-config
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
      - name: mysql-initdb-config
        configMap:
          name: mysql-initdb-config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  labels:
    app: mysql
    tier: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  initdb.sql: |-
    CREATE TABLE users (name VARCHAR(20));
    INSERT INTO users (name) VALUES ('kulkarni');
---
apiVersion: v1
kind: Secret
metadata:
  name: db-credentials
data:
  username: {{ .Values.db.username | b64enc | quote }}
  password: {{ .Values.db.password | b64enc | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: db-root-credentials
data:
 password: {{ .Values.db.rootpassword }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-conf
data:
 host: {{ .Values.db.host }}
 name: {{ .Values.db.db_name }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.MYSQL_SERVICE_NAME }}
  labels:
    app: mysql
    tier: database
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: mysql
    tier: database
  clusterIP: None
