#!/bin/bash

source utils.sh

print_help () {
    echo "NAME"
    echo "        kubectl applogs"
    echo ""
    echo "SYNOPSIS"
    echo "        kubectl applogs <Kind> <Instance> <Namespace> -k <Absolute path to kubeconfig>"
    echo ""
    echo "DESCRIPTION"
    echo "        kubectl applogs shows container logs for all the containers of all the Pods that are related to the input Kubernetes resource."
    exit 0
}

if (( $# < 5 )); then
  print_help
fi

kind=$1
instance=$2
namespace=$3
# Only --kubeconfig specified
kubeconfig1="$HOME/.kube/config" #default value

shift;
shift;
shift;

while getopts ":k:" opt; do
 case ${opt} in
   k )
     kubeconfig1=$OPTARG
     if [ ! -f $kubeconfig1 ]; then
       echo "Kubeconfig $kubeconfig1 does not exist."
       exit 0
     fi;;
    ? )
      echo "Invalid option: ${1} " 1>&2
      print_help
      exit 0
      ;;
 esac
done

kubeconfig="--kubeconfig="$kubeconfig1
if [ $# = 4 ] && [[ $4 == *"kubeconfig="* ]]; then
    kubeconfig=$4
fi

check_namespace $namespace $kubeconfig

#echo "$kind $instance $namespace"

canonicalKind=$(get_canonical_kind $kind)

if [[ $canonicalKind == *"Unknown"* ]]; then
	echo "$canonicalKind"
	exit 0
fi

resStatus=`kubectl $kubeconfig get $kind $instance -n $namespace -o json 2>&1`
if [[ $resStatus =~ 'Error' ]]; then
#  echo "Instance $instance of $kind not deployed properly."
  echo $resStatus
  exit 0
fi



python /$KUBEPLUS_HOME/plugins/crlogs.py connections $canonicalKind $instance $namespace $kubeconfig


#echo "kubectl grouplogs cr connections"
#echo "kubectl grouplogs service"
#echo "kubectl grouplogs helmrelease"
