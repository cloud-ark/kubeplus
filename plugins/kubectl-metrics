#!/bin/bash

source utils.sh

print_help () {
    echo "NAME"
    echo "        kubectl metrics"
    echo ""
    echo "SYNOPSIS"
    echo "        kubectl metrics <Kind> <Instance> -k <Absolute path to kubeconfig> [-o pretty|prometheus|json]"
    echo ""
    echo "DESCRIPTION"
    echo "        kubectl metrics collects CPU, Memory, Storage and Network consumption metrics for all the Pods for the <Instance>."
    echo "        <Kind> is the name of the Kubernetes Kind for the <Instance>."
    echo "        - Pod cpu and memory data is collected by querying kubelet."
    echo "        - Pod storage data is collected from the PersistentVolumeClaims of the Pods that are associated with the input resource."
    echo "        - Pod network consumption data is collected from cAdvisor."
    exit 0
}

if (( $# < 4 )); then
  print_help
fi

customres=$1
instance=$2
output="pretty"
kubeconfig1=""
if [[ $HOME != "/root" ]]; then
        kubeconfig1="$HOME/.kube/config" #default value
fi

shift;
shift;

while getopts ":k:o:h" opt; do
  case ${opt} in
    k )
      kubeconfig1=$OPTARG
      if [ ! -f $kubeconfig1 ]; then
        echo "Kubeconfig $kubeconfig1 does not exist."
        exit 0
      fi;;
    o )
      output=$OPTARG
      if [[ $output != 'pretty' ]] && [[ $output != 'prometheus' ]] && [[ $output != 'json' ]]; then
          echo "Invalid output type $output. Valid options: pretty, prometheus, json."
          exit 0
      fi
      outputString="--output="$output
      ;;
    #\? ) print_help;;
    h ) print_help;;
    ? )
      echo "Invalid option: ${1}" 1>&2
      print_help
      exit 0
      ;;
  esac
done

kubeconfig="--kubeconfig="$kubeconfig1

check_kind $customres $kubeconfig1

python /$KUBEPLUS_HOME/plugins/crmetrics.py $customres $instance $output $kubeconfig
