#!/bin/bash

source utils.sh

print_help () {
    echo "NAME"
    echo "        kubectl appurl"
    echo ""
    echo "SYNOPSIS"
    echo "        kubectl appurl <Kind> <Instance> -k <Absolute path to kubeconfig>"
    echo ""
    echo "DESCRIPTION"
    echo "        kubectl appurl parses the application url. It first looks for Ingress objects; if no Ingress is defined then it looks for Service objects."
    exit 0
}

if (( $# < 4 )); then
  print_help
fi

kind=$1
instance=$2
kubeconfig1=""

shift;
shift;

while getopts ":k:" opt; do
  case ${opt} in
    k )
      kubeconfig1=$OPTARG
      if [ ! -f $kubeconfig1 ]; then
        echo "Kubeconfig $kubeconfig1 does not exist."
        exit 0
      fi;;
  esac
done

kubeconfig="--kubeconfig="$kubeconfig1

canonicalKind=$(get_canonical_kind $kind)

if [[ $canonicalKind == *"Unknown"* ]]; then
	echo "$canonicalKind"
	exit 0
fi

kubeplusNamespace=`kubectl get pods -A $kubeconfig | grep kubeplus-deployment | awk '{print $1}'`
resStatus=`kubectl $kubeconfig get $kind $instance -n $kubeplusNamespace -o json 2>&1`
if [[ $resStatus =~ 'Error' ]]; then
  echo $resStatus
  exit 0
fi


python3 /$KUBEPLUS_HOME/plugins/appurl.py $canonicalKind $instance $kubeconfig
