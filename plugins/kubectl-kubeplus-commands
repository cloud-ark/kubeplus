#!/bin/bash

print_help () {
    echo "NAME"
    echo "        kubectl kubeplus commands"
    echo ""
    echo "SYNOPSIS"
    echo "        kubectl man"
    echo "        kubectl connections"
    echo "        kubectl metrics"
    echo "        kubectl applogs"
    echo "        kubectl appurl"
    echo "        kubectl appresources"
    echo "        kubectl retrieve kubeconfig provider"
    echo "        kubectl retrieve kubeconfig consumer"
    echo "        kubectl grantpermission consumer"
    echo "        kubectl upload chart"
    echo "        kubectl show provider permissions"
    echo "        kubectl show consumer permissions"
    echo "        kubectl license create"
    echo "        kubectl license get"
    echo "        kubectl license delete"
    echo "        kubectl allow network traffic <ns1> <ns2> [-k <kubeconfig>]"
    echo "              Allows bidirectional network traffic between the two namespaces"
    echo "              by adding ingress rules for the 'restrict-cross-ns-traffic' NetworkPolicy"
    echo "              in both namespaces."
    echo "        kubectl deny network traffic <ns1> <ns2> [-k <kubeconfig>]"
    echo "              Denies bidirectional network traffic between the two namespaces"
    echo "              by removing the specific ingress rules that allow cross-namespace traffic"
    echo "              from the 'restrict-cross-ns-traffic' NetworkPolicy."
    echo ""
    echo "DESCRIPTION"
    echo "        KubePlus provides a suite of kubectl plugins to discover, monitor and troubleshoot Kubernetes applications."
    echo ""
    echo "        The discovery plugins (kubectl man, kubectl connections, kubectl appresources) help with discovering the static and runtime"
    echo "        information about an application."
    echo "        - kubectl man provides the ability to discover man page like information about Kubernetes Custom Resources."
    echo "        - kubectl connections provides the ability to discover Kubernetes resources that are related to one another"
    echo "          through one of the following relationships - ownerReferences, label, annotations, spec properties."
    echo "        - kubectl appresources displays all the resources that have been created for an application."
    echo "        The monitoring and troubleshooting plugins (kubectl metrics and kubectl applogs) enable collecting application metrics and logs."
    echo "        - kubectl metrics collects CPU, Memory, Storage, and Network metrics for an application. These are available in Prometheus format."
    echo "        - kubectl applogs collects logs for all the containers of all the Pods in an application."
    echo "        The kubeconfig files that are meant to be used by SaaS provider and SaaS consumers are available through:"
    echo "        - kubectl retrieve kubeconfig provider"
    echo "        - kubectl retrieve kubeconfig consumer"
    echo "        These kubeconfig files are provided with limited RBAC permissions appropriate for the persona."
    echo "        "
    echo "        - kubectl grantpermission consumer"
    echo "        This plugin enables provider to grant permission for the the created service to the consumer."
    echo "        A consumer will be able to create service instances only after that."
    echo "        - kubectl appurl"
    echo "        This plugin retrieves application url by searching for Service object of type NodePort in an application's"
    echo "        resource relationship graph and constructing the url."
    echo "        A consumer will be able to create service instances only after that."
    echo "        - kubectl upload chart"
    echo "        Upload Helm chart (tgz) to KubePlus Operator."
    echo ""
    echo "        - kubectl show provider permissions shows the permissions for kubeplus-saas-provider service account in the namespace where kubeplus is installed."
    echo "        - kubectl show consumer permissions shows the permissions for kubeplus-saas-consumer service account in the namespace where kubeplus is installed."
    echo "        License Management."
    echo "        - kubectl license create - creates license for a Kind"
    echo "        - kubectl license get    - gets license for a Kind"
    echo "        - kubectl license delete - deletes license for a Kind"
    exit 0
}

print_help
