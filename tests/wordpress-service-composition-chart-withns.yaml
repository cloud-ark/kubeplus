apiVersion: workflows.kubeplus/v1alpha1
kind: ResourceComposition
metadata:
  name: wordpress-service-composition-ns
spec:
  # newResource defines the new CRD to be installed define a workflow.
  newResource:
    resource:
      kind: WordpressServiceNS
      group: platformapi.kubeplus
      version: v1alpha1
      plural: wordpressservicenses 
    # URL of the Helm chart that contains Kubernetes resources that represent a workflow.
    chartURL: https://github.com/cloud-ark/k8s-workshop/blob/master/wordpress-deployment-chart-with-ns/wordpress-chart-with-ns-0.1.0.tgz?raw=true 
    chartName: wordpress-chart-with-ns
  # respolicy defines the resource policy to be applied to instances of the specified custom resource.
  respolicy:
    apiVersion: workflows.kubeplus/v1alpha1
    kind: ResourcePolicy 
    metadata:
      name: wordpress-service-policy-ns
    spec:
      resource:
        kind: WordpressServiceNS
        group: platformapi.kubeplus
        version: v1alpha1
      policy:
        # Add following requests and limits for the first container of all the Pods that are related via 
        # owner reference relationship to instances of resources specified above.
        podconfig:
          limits:
            cpu: 200m
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 1Gi
          nodeSelector: values.nodeName
  # resmonitor identifies the resource instances that should be monitored for CPU/Memory/Storage.
  # All the Pods that are related to the resource instance through either ownerReference relationship, or all the relationships
  # (ownerReference, label, annotation, spec properties) are considered in calculating the statistics. 
  # The generated output is in Prometheus format.
  resmonitor:
    apiVersion: workflows.kubeplus/v1alpha1
    kind: ResourceMonitor
    metadata:
      name: wordpress-service-monitor-ns
    spec:
      resource:
        kind: WordpressServiceNS
        group: platformapi.kubeplus
        version: v1alpha1
      # This attribute indicates that Pods that are reachable through all the relationships should be used
      # as part of calculating the monitoring statistics.
      monitorRelationships: all
